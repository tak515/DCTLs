// Hue Rotate OFX DCTL

DEFINE_UI_PARAMS(rotate, Rotate, DCTLUI_SLIDER_FLOAT, 0, -1, 1, 0.001)
DEFINE_UI_PARAMS(apply, Apply, DCTLUI_CHECK_BOX, 1)

__DEVICE__ void RGB_to_HSV( float r, float g, float b, float *h, float *s, float *v )
{
	float min = _fminf(_fminf(r, g), b);
	float max = _fmaxf(_fmaxf(r, g), b);
	*v = max;
	float delta = max - min;
	if (max != 0.) {
		*s = delta / max;
	} else {
		*s = 0.f;
		*h = 0.f;
		return;
	}
	if (delta == 0.) {
		*h = 0.f;
	} else if (r == max) {
		*h = (g - b) / delta;
	} else if (g == max) {
		*h = 2 + (b - r) / delta;
	} else {
		*h = 4 + (r - g) / delta;
	}
	*h *= 1.0f / 6.;
	if (*h < 0) {
		*h += 1.0f;
	}
}

__DEVICE__ void HSV_to_RGB(float H, float S, float V, float *r, float *g, float *b)
{
	if (S == 0.0f) {
		*r = *g = *b = V;
		return;
	}
	H *= 6.0f;
	int i = _floor(H);
	float f = H - i;
	i = (i >= 0) ? (i % 6) : (i % 6) + 6;
	float p = V * (1.0f - S);
	float q = V * (1.0f - S * f);
	float t = V * (1.0f - S * (1.0f - f));
	*r = i == 0 ? V : i == 1 ? q : i == 2 ? p : i == 3 ? p : i == 4 ? t : V;
	*g = i == 0 ? t : i == 1 ? V : i == 2 ? V : i == 3 ? q : i == 4 ? p : p;
	*b = i == 0 ? p : i == 1 ? p : i == 2 ? t : i == 3 ? V : i == 4 ? V : q;
}

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    
	float r, g, b, h, s, v;
	RGB_to_HSV( p_R, p_G, p_B, &h, &s, &v);
	
	h += rotate;
	h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;
	
	HSV_to_RGB( h, s, v, &r, &g, &b);
    
    r = apply ? r : p_R;
    g = apply ? g : p_G;
    b = apply ? b : p_B;

    return make_float3(r, g, b);
}
